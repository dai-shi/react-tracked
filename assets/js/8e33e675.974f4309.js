"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[677],{8860:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>g});var a=n(7953);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),l=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return a.createElement(u.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=l(n),m=r,g=d["".concat(u,".").concat(m)]||d[m]||p[m]||s;return n?a.createElement(g,i(i({ref:t},c),{},{components:n})):a.createElement(g,i({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,i=new Array(s);i[0]=m;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[d]="string"==typeof e?e:r,i[1]=o;for(var l=2;l<s;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9800:(e,t,n)=>{n.d(t,{A:()=>i});var a=n(7953),r=n(8835);const s={tabItem:"tabItem_lILU"};function i(e){let{children:t,hidden:n,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.A)(s.tabItem,i),hidden:n},t)}},9259:(e,t,n)=>{n.d(t,{A:()=>k});var a=n(3911),r=n(7953),s=n(8835),i=n(2427),o=n(5926),u=n(4076),l=n(1781),c=n(3519);function d(e){return function(e){var t,n;return null!=(t=null==(n=r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:n.filter(Boolean))?t:[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function p(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=null!=t?t:d(n);return function(e){const t=(0,l.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function g(e){let{queryString:t=!1,groupId:n}=e;const a=(0,o.W6)(),s=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=n?n:null}({queryString:t,groupId:n});return[(0,u.aZ)(s),(0,r.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(a.location.search);t.set(s,e),a.replace({...a.location,search:t.toString()})}),[s,a])]}function y(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,s=p(e),[i,o]=(0,r.useState)((()=>function(e){var t;let{defaultValue:n,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:a}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+a.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}const r=null!=(t=a.find((e=>e.default)))?t:a[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:s}))),[u,l]=g({queryString:n,groupId:a}),[d,y]=function(e){let{groupId:t}=e;const n=function(e){return e?"docusaurus.tab."+e:null}(t),[a,s]=(0,c.Dv)(n);return[a,(0,r.useCallback)((e=>{n&&s.set(e)}),[n,s])]}({groupId:a}),h=(()=>{const e=null!=u?u:d;return m({value:e,tabValues:s})?e:null})();(0,r.useLayoutEffect)((()=>{h&&o(h)}),[h]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:s}))throw new Error("Can't select invalid tab value="+e);o(e),l(e),y(e)}),[l,y,s]),tabValues:s}}var h=n(126);const f={tabList:"tabList_DfGC",tabItem:"tabItem_dqXl"};function b(e){let{className:t,block:n,selectedValue:o,selectValue:u,tabValues:l}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.a_)(),p=e=>{const t=e.currentTarget,n=c.indexOf(t),a=l[n].value;a!==o&&(d(t),u(a))},m=e=>{var t;let n=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{var a;const t=c.indexOf(e.currentTarget)+1;n=null!=(a=c[t])?a:c[0];break}case"ArrowLeft":{var r;const t=c.indexOf(e.currentTarget)-1;n=null!=(r=c[t])?r:c[c.length-1];break}}null==(t=n)||t.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":n},t)},l.map((e=>{let{value:t,label:n,attributes:i}=e;return r.createElement("li",(0,a.A)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>c.push(e),onKeyDown:m,onClick:p},i,{className:(0,s.A)("tabs__item",f.tabItem,null==i?void 0:i.className,{"tabs__item--active":o===t})}),null!=n?n:t)})))}function v(e){let{lazy:t,children:n,selectedValue:a}=e;const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=s.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},s.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function S(e){const t=y(e);return r.createElement("div",{className:(0,s.A)("tabs-container",f.tabList)},r.createElement(b,(0,a.A)({},e,t)),r.createElement(v,(0,a.A)({},e,t)))}function k(e){const t=(0,h.A)();return r.createElement(S,(0,a.A)({key:String(t)},e))}},9808:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var a=n(3911),r=(n(7953),n(8860));n(9259),n(9800);const s={id:"recipes",title:"Recipes",sidebar_label:"Recipes"},i=void 0,o={unversionedId:"recipes",id:"recipes",title:"Recipes",description:"React Tracked provides a primitive API,",source:"@site/docs/recipes.md",sourceDirName:".",slug:"/recipes",permalink:"/docs/recipes",draft:!1,tags:[],version:"current",frontMatter:{id:"recipes",title:"Recipes",sidebar_label:"Recipes"},sidebar:"docs",previous:{title:"API",permalink:"/docs/api"},next:{title:"Debugging",permalink:"/docs/debugging"}},u={},l=[{value:"Recipes for createContainer",id:"recipes-for-createcontainer",level:2},{value:"useReducer (props)",id:"usereducer-props",level:3},{value:"useReducer (embedded)",id:"usereducer-embedded",level:3},{value:"useState (props)",id:"usestate-props",level:3},{value:"useState (empty object)",id:"usestate-empty-object",level:3},{value:"useReducer (with persistence)",id:"usereducer-with-persistence",level:3},{value:"useState (with propState)",id:"usestate-with-propstate",level:3},{value:"useReducer (with event listener)",id:"usereducer-with-event-listener",level:3},{value:"useState (with update functions)",id:"usestate-with-update-functions",level:3},{value:"Recipes for useTrackedState and useTracked",id:"recipes-for-usetrackedstate-and-usetracked",level:2},{value:"useSelectorWithTracking",id:"useselectorwithtracking",level:3},{value:"useTrackedByName (based on useState)",id:"usetrackedbyname-based-on-usestate",level:3},{value:"useTrackedWithImmer (based on useState)",id:"usetrackedwithimmer-based-on-usestate",level:3},{value:"Recipes for useUpdate (useDispatch)",id:"recipes-for-useupdate-usedispatch",level:2},{value:"useSafeDispatch",id:"usesafedispatch",level:3}],c={toc:l},d="wrapper";function p(e){let{components:t,...n}=e;return(0,r.yg)(d,(0,a.A)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"React Tracked provides a primitive API,\nand there are various ways to use it for apps."),(0,r.yg)("h2",{id:"recipes-for-createcontainer"},"Recipes for createContainer"),(0,r.yg)("p",null,"The argument ",(0,r.yg)("inlineCode",{parentName:"p"},"useValue")," in ",(0,r.yg)("inlineCode",{parentName:"p"},"createContainer")," is so flexible\nand there are various usages."),(0,r.yg)("h3",{id:"usereducer-props"},"useReducer (props)"),(0,r.yg)("p",null,"This is the most typical usage.\nYou define a generic reducer and pass ",(0,r.yg)("inlineCode",{parentName:"p"},"reducer")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"initialState")," as props."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"const {\n  Provider,\n  useTracked,\n  // ...\n} = createContainer(({ reducer, initialState, init }) => useReducer(reducer, initialState, init));\n\nconst reducer = ...;\n\nconst App = ({ initialState }) => (\n  <Provider reducer={reducer} initialState={initialState}>\n    ...\n  </Provider>\n);\n")),(0,r.yg)("h3",{id:"usereducer-embedded"},"useReducer (embedded)"),(0,r.yg)("p",null,"For most cases, you would have a static reducer.\nIn this case, define useValue with the reducer in advance.\nThe ",(0,r.yg)("inlineCode",{parentName:"p"},"initialState")," can be defined in useValue like the following example,\nor can be taken from props: ",(0,r.yg)("inlineCode",{parentName:"p"},"({ initialState }) => useReducer(...)")),(0,r.yg)("p",null,"This is good for TypeScript because the hooks returned by ",(0,r.yg)("inlineCode",{parentName:"p"},"createContainer")," is already typed."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"const reducer = ...;\nconst initialState = ...;\n\nconst {\n  Provider,\n  useTracked,\n  // ...\n} = createContainer(() => useReducer(reducer, initialState));\n\n\nconst App = () => (\n  <Provider>\n    ...\n  </Provider>\n);\n")),(0,r.yg)("h3",{id:"usestate-props"},"useState (props)"),(0,r.yg)("p",null,"If you don't need reducer, useState would be simpler."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"const {\n  Provider,\n  useTracked,\n  // ...\n} = createContainer(({ initialState }) => useState(initialState);\n\n\nconst App = ({ initialState }) => (\n  <Provider initialState={initialState}>\n    ...\n  </Provider>\n);\n")),(0,r.yg)("h3",{id:"usestate-empty-object"},"useState (empty object)"),(0,r.yg)("p",null,"You could even start with completely an empty object."),(0,r.yg)("p",null,"This might not be TypeScript friendly. Although, you could do this: ",(0,r.yg)("inlineCode",{parentName:"p"},"useState<State>({})")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"const {\n  Provider,\n  useTracked,\n  // ...\n} = createContainer(() => useState({});\n\nconst App = () => (\n  <Provider>\n    ...\n  </Provider>\n);\n")),(0,r.yg)("h3",{id:"usereducer-with-persistence"},"useReducer (with persistence)"),(0,r.yg)("p",null,"Here's how to persist state in localStorage."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"const reducer = ...;\nconst initialState = ...; // used only if localStorage is empty.\nconst storageKey = 'persistedState';\n\nconst init = () => {\n  let preloadedState;\n  try {\n    preloadedState =  JSON.parse(window.localStorage.getItem(storageKey));\n    // validate preloadedState if necessary\n  } catch (e) {\n    // ignore\n  }\n  return preloadedState || initialState;\n};\n\nconst useValue = () => {\n  const [state, dispatch] = useReducer(reducer, null, init);\n  useEffect(() => {\n    window.localStorage.setItem(storageKey, JSON.stringify(state));\n  }, [state]);\n  return [state, dispatch];\n};\n\nconst {\n  Provider,\n  useTracked,\n  // ...\n} = createContainer(useValue);\n\nconst App = () => (\n  <Provider>\n    ...\n  </Provider>\n);\n")),(0,r.yg)("p",null,"Using async storage is a bit tricky.\nSee ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/dai-shi/react-tracked/issues/8#issuecomment-548095476"},"the thread")," for an example."),(0,r.yg)("h3",{id:"usestate-with-propstate"},"useState (with propState)"),(0,r.yg)("p",null,"If you already have a state and would like to use Provider with it,\nyou can sync a container state with a state from props."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"const useValue = ({ propState }) => {\n  const [state, setState] = useState(propState);\n  useEffect(() => {\n    // or useLayoutEffect\n    setState(propState);\n  }, [propState]);\n  return [state, setState];\n};\n\nconst {\n  Provider,\n  useTracked,\n  // ...\n} = createContainer(useValue);\n\nconst App = ({ propState }) => <Provider propState={propState}>...</Provider>;\n")),(0,r.yg)("p",null,"Note that ",(0,r.yg)("inlineCode",{parentName:"p"},"propState")," has to be updated immutably."),(0,r.yg)("h3",{id:"usereducer-with-event-listener"},"useReducer (with event listener)"),(0,r.yg)("p",null,"Here's how to dispatch actions by DOM events."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"const reducer = ...;\nconst initialState = ...;\n\nconst useValue = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    const listener = () => {\n      dispatch({\n        type: 'WINDOW_RESIZED',\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    };\n    window.addEventListener('resize', listener);\n    return () => {\n      window.removeEventListener('resize', listener);\n    };\n  }, []);\n  return [state, dispatch];\n};\n\nconst {\n  Provider,\n  useTracked,\n  // ...\n} = createContainer(useValue);\n\nconst App = () => (\n  <Provider>\n    ...\n  </Provider>\n);\n")),(0,r.yg)("h3",{id:"usestate-with-update-functions"},"useState (with update functions)"),(0,r.yg)("p",null,"If you want to have custom update functions,\nyou can store them in a state object.\nBe sure to use ",(0,r.yg)("inlineCode",{parentName:"p"},"useCallback")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"useMemo"),"\nto make the state object stable."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"const useValue = () => {\n  const [count, setCount] = useState(0);\n  const increment = useCallback(() => setCount((c) => c + 1), []);\n  const decrement = useCallback(() => setCount((c) => c - 1), []);\n  const state = useMemo(\n    () => ({\n      count,\n      increment,\n      decrement,\n    }),\n    [count, increment, decrement],\n  );\n  return [\n    state,\n    () => {\n      throw new Error('use functions in the state');\n    },\n  ];\n};\n\nconst { Provider, useTrackedState } = createContainer(useValue);\n\nconst App = () => <Provider>...</Provider>;\n")),(0,r.yg)("p",null,"Note: With custom update functions, you don't get the benefit\neven if you enable ",(0,r.yg)("inlineCode",{parentName:"p"},"concurrentMode")," in ",(0,r.yg)("inlineCode",{parentName:"p"},"createContainer"),"."),(0,r.yg)("h2",{id:"recipes-for-usetrackedstate-and-usetracked"},"Recipes for useTrackedState and useTracked"),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"useTrackedState")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"useTracked")," hooks are useful as is,\nbut new hooks can also be created based on them."),(0,r.yg)("h3",{id:"useselectorwithtracking"},"useSelectorWithTracking"),(0,r.yg)("p",null,"Selector interface is useful to share selection logic.\nYou can create a selector hook with state usage tracking very easily."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"const useSelectorWithTracking = (selector) => selector(useTrackedState());\n")),(0,r.yg)("p",null,"Note: This is different from ",(0,r.yg)("inlineCode",{parentName:"p"},"useSelector")," which has no tracking support\nand triggers re-render based on the ref equality of selected value."),(0,r.yg)("h3",{id:"usetrackedbyname-based-on-usestate"},"useTrackedByName (based on useState)"),(0,r.yg)("p",null,"Sometimes, you might want to select a state by its property name.\nHere's a custom hook to return a tuple ",(0,r.yg)("inlineCode",{parentName:"p"},"[value, setValue]")," selected by a name."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"const useTrackedByName = (name) => {\n  const [state, setState] = useTracked();\n  const update = useCallback(\n    (newVal) => {\n      setState((oldVal) => ({\n        ...oldVal,\n        [name]: typeof newVal === 'function' ? newVal(oldVal[name]) : newVal,\n      }));\n    },\n    [setState, name],\n  );\n  return [state[name], update];\n};\n")),(0,r.yg)("h3",{id:"usetrackedwithimmer-based-on-usestate"},"useTrackedWithImmer (based on useState)"),(0,r.yg)("p",null,"Updating a property deep in a state object is troublesome.\nHere's a custom hook to use ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/immerjs/immer"},"immer")," for setState."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"import produce from 'immer';\n\nconst useTrackedWithImmer = () => {\n  const [state, setState] = useTracked();\n  const update = useCallback(\n    (updater) => {\n      setState((oldVal) => produce(oldVal, updater));\n    },\n    [setState],\n  );\n  return [state, update];\n};\n")),(0,r.yg)("p",null,"Note: This can also be done at ",(0,r.yg)("inlineCode",{parentName:"p"},"createContainer"),"."),(0,r.yg)("h2",{id:"recipes-for-useupdate-usedispatch"},"Recipes for useUpdate (useDispatch)"),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"useUpdate")," simply returns the second item\nin a tuple returned by ",(0,r.yg)("inlineCode",{parentName:"p"},"useState")," or ",(0,r.yg)("inlineCode",{parentName:"p"},"useReducer"),".\nIt can also be extended as a custom hook."),(0,r.yg)("h3",{id:"usesafedispatch"},"useSafeDispatch"),(0,r.yg)("p",null,"This is a modified version of useDispatch that calls ",(0,r.yg)("inlineCode",{parentName:"p"},"getUntrackedObject"),"\nrecursively on an action object before dispatching it."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"import { getUntrackedObject } from 'react-tracked';\n\nconst untrackDeep = (obj) => {\n  if (typeof obj !== 'object' || obj === null) return obj;\n  const untrackedObj = getUntrackedObject(obj);\n  if (untrackedObj !== null) return untrackedObj;\n  const newObj = {};\n  let modified = false;\n  Object.entries(obj).forEach(([k, v]) => {\n    newObj[k] = untrackDeep(v);\n    if (newObj[k] !== null) {\n      modified = true;\n    } else {\n      newObj[k] = v;\n    }\n  });\n  return modified ? newObj : obj;\n};\n\nconst useSafeDispatch = () => {\n  const dispatch = useDispatch();\n  return useCallback(\n    (action) => {\n      dispatch(untrackDeep(action));\n    },\n    [dispatch],\n  );\n};\n")))}p.isMDXComponent=!0}}]);