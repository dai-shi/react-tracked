"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[464],{8860:(e,t,n)=>{n.d(t,{xA:()=>d,yg:()=>y});var r=n(7953);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),i=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=i(e.components);return r.createElement(u.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,u=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=i(n),m=o,y=c["".concat(u,".").concat(m)]||c[m]||p[m]||s;return n?r.createElement(y,a(a({ref:t},d),{},{components:n})):r.createElement(y,a({ref:t},d))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,a=new Array(s);a[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[c]="string"==typeof e?e:o,a[1]=l;for(var i=2;i<s;i++)a[i]=n[i];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9800:(e,t,n)=>{n.d(t,{A:()=>a});var r=n(7953),o=n(8835);const s={tabItem:"tabItem_lILU"};function a(e){let{children:t,hidden:n,className:a}=e;return r.createElement("div",{role:"tabpanel",className:(0,o.A)(s.tabItem,a),hidden:n},t)}},9259:(e,t,n)=>{n.d(t,{A:()=>k});var r=n(3911),o=n(7953),s=n(8835),a=n(2427),l=n(5926),u=n(4076),i=n(1781),d=n(3519);function c(e){return function(e){var t,n;return null!=(t=null==(n=o.Children.map(e,(e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:n.filter(Boolean))?t:[]}(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:o}}=e;return{value:t,label:n,attributes:r,default:o}}))}function p(e){const{values:t,children:n}=e;return(0,o.useMemo)((()=>{const e=null!=t?t:c(n);return function(e){const t=(0,i.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function y(e){let{queryString:t=!1,groupId:n}=e;const r=(0,l.W6)(),s=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=n?n:null}({queryString:t,groupId:n});return[(0,u.aZ)(s),(0,o.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(r.location.search);t.set(s,e),r.replace({...r.location,search:t.toString()})}),[s,r])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,s=p(e),[a,l]=(0,o.useState)((()=>function(e){var t;let{defaultValue:n,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:r}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+r.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}const o=null!=(t=r.find((e=>e.default)))?t:r[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:t,tabValues:s}))),[u,i]=y({queryString:n,groupId:r}),[c,f]=function(e){let{groupId:t}=e;const n=function(e){return e?"docusaurus.tab."+e:null}(t),[r,s]=(0,d.Dv)(n);return[r,(0,o.useCallback)((e=>{n&&s.set(e)}),[n,s])]}({groupId:r}),g=(()=>{const e=null!=u?u:c;return m({value:e,tabValues:s})?e:null})();(0,o.useLayoutEffect)((()=>{g&&l(g)}),[g]);return{selectedValue:a,selectValue:(0,o.useCallback)((e=>{if(!m({value:e,tabValues:s}))throw new Error("Can't select invalid tab value="+e);l(e),i(e),f(e)}),[i,f,s]),tabValues:s}}var g=n(126);const T={tabList:"tabList_DfGC",tabItem:"tabItem_dqXl"};function b(e){let{className:t,block:n,selectedValue:l,selectValue:u,tabValues:i}=e;const d=[],{blockElementScrollPositionUntilNextRender:c}=(0,a.a_)(),p=e=>{const t=e.currentTarget,n=d.indexOf(t),r=i[n].value;r!==l&&(c(t),u(r))},m=e=>{var t;let n=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{var r;const t=d.indexOf(e.currentTarget)+1;n=null!=(r=d[t])?r:d[0];break}case"ArrowLeft":{var o;const t=d.indexOf(e.currentTarget)-1;n=null!=(o=d[t])?o:d[d.length-1];break}}null==(t=n)||t.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":n},t)},i.map((e=>{let{value:t,label:n,attributes:a}=e;return o.createElement("li",(0,r.A)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>d.push(e),onKeyDown:m,onClick:p},a,{className:(0,s.A)("tabs__item",T.tabItem,null==a?void 0:a.className,{"tabs__item--active":l===t})}),null!=n?n:t)})))}function v(e){let{lazy:t,children:n,selectedValue:r}=e;const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=s.find((e=>e.props.value===r));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},s.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function h(e){const t=f(e);return o.createElement("div",{className:(0,s.A)("tabs-container",T.tabList)},o.createElement(b,(0,r.A)({},e,t)),o.createElement(v,(0,r.A)({},e,t)))}function k(e){const t=(0,g.A)();return o.createElement(h,(0,r.A)({key:String(t)},e))}},4839:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>u,default:()=>y,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var r=n(3911),o=(n(7953),n(8860)),s=n(9259),a=n(9800);const l={id:"tutorial-03",title:"Tutorial with createContainer - ToDo App with useState",sidebar_label:"ToDo App (useState+Immer)"},u=void 0,i={unversionedId:"tutorial-03",id:"tutorial-03",title:"Tutorial with createContainer - ToDo App with useState",description:"This tutorial shows example code with useState, Immer and custom hooks.",source:"@site/docs/tutorial-03.md",sourceDirName:".",slug:"/tutorial-03",permalink:"/docs/tutorial-03",draft:!1,tags:[],version:"current",frontMatter:{id:"tutorial-03",title:"Tutorial with createContainer - ToDo App with useState",sidebar_label:"ToDo App (useState+Immer)"},sidebar:"docs",previous:{title:"ToDo App (useReducer)",permalink:"/docs/tutorial-02"},next:{title:"ToDo App (async)",permalink:"/docs/tutorial-04"}},d={},c=[{value:"src/components/App.js",id:"srccomponentsappjs",level:2},{value:"src/store.js",id:"srcstorejs",level:2},{value:"src/hooks/useTodoList.js",id:"srchooksusetodolistjs",level:2},{value:"src/hooks/useAddTodo.js",id:"srchooksuseaddtodojs",level:2},{value:"src/hooks/useDeleteTodo.js",id:"srchooksusedeletetodojs",level:2},{value:"src/hooks/useToogleTodo.js",id:"srchooksusetoogletodojs",level:2},{value:"src/hooks/useQuery.js",id:"srchooksusequeryjs",level:2},{value:"src/components/TodoList.js",id:"srccomponentstodolistjs",level:2},{value:"src/components/TodoItem.js",id:"srccomponentstodoitemjs",level:2},{value:"src/components/NewTodo.js",id:"srccomponentsnewtodojs",level:2},{value:"src/utils.js",id:"srcutilsjs",level:2},{value:"CodeSandbox",id:"codesandbox",level:2}],p={toc:c},m="wrapper";function y(e){let{components:t,...n}=e;return(0,o.yg)(m,(0,r.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("p",null,"This tutorial shows example code with useState, ",(0,o.yg)("a",{parentName:"p",href:"https://immerjs.github.io/immer/"},"Immer")," and custom hooks."),(0,o.yg)("h2",{id:"srccomponentsappjs"},"src/components/App.js"),(0,o.yg)(s.A,{defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"TabsUsedByRemarkPluginTs2Js"},(0,o.yg)(a.A,{value:"js",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-javascript"},"import React from 'react';\n\nimport { Provider } from '../store';\nimport TodoList from './TodoList';\n\nconst App = () => (\n  <Provider>\n    <TodoList />\n  </Provider>\n);\n\nexport default App;\n\n"))),(0,o.yg)(a.A,{value:"ts",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-typescript"},"import React from 'react';\n\nimport { Provider } from '../store';\nimport TodoList from './TodoList';\n\nconst App = () => (\n  <Provider>\n    <TodoList />\n  </Provider>\n);\n\nexport default App;\n\n")))),(0,o.yg)("p",null,"This is the root component.\nIt wraps TodoList with Provider."),(0,o.yg)("h2",{id:"srcstorejs"},"src/store.js"),(0,o.yg)(s.A,{defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"TabsUsedByRemarkPluginTs2Js"},(0,o.yg)(a.A,{value:"js",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-javascript"},"import { useState, useCallback } from 'react';\nimport { createContainer } from 'react-tracked';\nimport produce from 'immer';\n\nconst initialState = {\n  todos: [\n    { id: 1, title: 'Wash dishes' },\n    { id: 2, title: 'Study JS' },\n    { id: 3, title: 'Buy ticket' },\n  ],\n  query: '',\n};\n\nconst useValue = () => useState(initialState);\n\nconst {\n  Provider,\n  useTrackedState,\n  useUpdate: useSetState,\n} = createContainer(useValue);\n\nconst useSetDraft = () => {\n  const setState = useSetState();\n  return useCallback(\n    (draftUpdater) => {\n      setState(produce(draftUpdater));\n    },\n    [setState],\n  );\n};\n\nexport { Provider, useTrackedState, useSetDraft };\n\n"))),(0,o.yg)(a.A,{value:"ts",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-typescript"},"import { useState, useCallback } from 'react';\nimport { createContainer } from 'react-tracked';\nimport produce, { Draft } from 'immer';\n\ntype TodoType = {\n  id: number;\n  title: string;\n  completed?: boolean;\n};\n\nexport type State = {\n  todos: TodoType[];\n  query: string;\n};\n\nconst initialState: State = {\n  todos: [\n    { id: 1, title: 'Wash dishes' },\n    { id: 2, title: 'Study JS' },\n    { id: 3, title: 'Buy ticket' },\n  ],\n  query: '',\n};\n\nconst useValue = () => useState(initialState);\n\nconst {\n  Provider,\n  useTrackedState,\n  useUpdate: useSetState,\n} = createContainer(useValue);\n\nconst useSetDraft = () => {\n  const setState = useSetState();\n  return useCallback(\n    (draftUpdater: (draft: Draft<State>) => void) => {\n      setState(produce(draftUpdater));\n    },\n    [setState],\n  );\n};\n\nexport { Provider, useTrackedState, useSetDraft };\n\n")))),(0,o.yg)("p",null,"The store is created by useState.\nuseUpdate is renamed to useSetState,\nand based on it, useSetDraft with Immer is exported."),(0,o.yg)("h2",{id:"srchooksusetodolistjs"},"src/hooks/useTodoList.js"),(0,o.yg)(s.A,{defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"TabsUsedByRemarkPluginTs2Js"},(0,o.yg)(a.A,{value:"js",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-javascript"},"import { useTrackedState } from '../store';\n\nexport const useTodoList = () => {\n  const state = useTrackedState();\n  return state.todos;\n};\n\n"))),(0,o.yg)(a.A,{value:"ts",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-typescript"},"import { useTrackedState } from '../store';\n\nexport const useTodoList = () => {\n  const state = useTrackedState();\n  return state.todos;\n};\n\n")))),(0,o.yg)("p",null,"This is a custom hook to simply return ",(0,o.yg)("inlineCode",{parentName:"p"},"todos"),"."),(0,o.yg)("h2",{id:"srchooksuseaddtodojs"},"src/hooks/useAddTodo.js"),(0,o.yg)(s.A,{defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"TabsUsedByRemarkPluginTs2Js"},(0,o.yg)(a.A,{value:"js",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-javascript"},"import { useCallback } from 'react';\n\nimport { useSetDraft } from '../store';\n\nlet nextId = 100;\n\nexport const useAddTodo = () => {\n  const setDraft = useSetDraft();\n  return useCallback(\n    (title) => {\n      setDraft((draft) => {\n        draft.todos.push({ id: nextId++, title });\n      });\n    },\n    [setDraft],\n  );\n};\n\n"))),(0,o.yg)(a.A,{value:"ts",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-typescript"},"import { useCallback } from 'react';\n\nimport { useSetDraft } from '../store';\n\nlet nextId = 100;\n\nexport const useAddTodo = () => {\n  const setDraft = useSetDraft();\n  return useCallback(\n    (title) => {\n      setDraft((draft) => {\n        draft.todos.push({ id: nextId++, title });\n      });\n    },\n    [setDraft],\n  );\n};\n\n")))),(0,o.yg)("p",null,"This is a custom hook to return ",(0,o.yg)("inlineCode",{parentName:"p"},"addTodo")," function."),(0,o.yg)("h2",{id:"srchooksusedeletetodojs"},"src/hooks/useDeleteTodo.js"),(0,o.yg)(s.A,{defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"TabsUsedByRemarkPluginTs2Js"},(0,o.yg)(a.A,{value:"js",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-javascript"},"import { useCallback } from 'react';\n\nimport { useSetDraft } from '../store';\n\nexport const useDeleteTodo = () => {\n  const setDraft = useSetDraft();\n  return useCallback(\n    (id) => {\n      setDraft((draft) => {\n        const index = draft.todos.findIndex((todo) => todo.id === id);\n        if (index >= 0) draft.todos.splice(index, 1);\n      });\n    },\n    [setDraft],\n  );\n};\n\n"))),(0,o.yg)(a.A,{value:"ts",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-typescript"},"import { useCallback } from 'react';\n\nimport { useSetDraft } from '../store';\n\nexport const useDeleteTodo = () => {\n  const setDraft = useSetDraft();\n  return useCallback(\n    (id: number) => {\n      setDraft((draft) => {\n        const index = draft.todos.findIndex((todo) => todo.id === id);\n        if (index >= 0) draft.todos.splice(index, 1);\n      });\n    },\n    [setDraft],\n  );\n};\n\n")))),(0,o.yg)("p",null,"This is a custom hook to return ",(0,o.yg)("inlineCode",{parentName:"p"},"deleteTodo")," function."),(0,o.yg)("h2",{id:"srchooksusetoogletodojs"},"src/hooks/useToogleTodo.js"),(0,o.yg)(s.A,{defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"TabsUsedByRemarkPluginTs2Js"},(0,o.yg)(a.A,{value:"js",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-javascript"},"import { useCallback } from 'react';\n\nimport { useSetDraft } from '../store';\n\nexport const useToggleTodo = () => {\n  const setDraft = useSetDraft();\n  return useCallback(\n    (id) => {\n      setDraft((draft) => {\n        const todo = draft.todos.find((todo) => todo.id === id);\n        if (todo) todo.completed = !todo.completed;\n      });\n    },\n    [setDraft],\n  );\n};\n\n"))),(0,o.yg)(a.A,{value:"ts",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-typescript"},"import { useCallback } from 'react';\n\nimport { useSetDraft } from '../store';\n\nexport const useToggleTodo = () => {\n  const setDraft = useSetDraft();\n  return useCallback(\n    (id: number) => {\n      setDraft((draft) => {\n        const todo = draft.todos.find((todo) => todo.id === id);\n        if (todo) todo.completed = !todo.completed;\n      });\n    },\n    [setDraft],\n  );\n};\n\n")))),(0,o.yg)("p",null,"This is a custom hook to return ",(0,o.yg)("inlineCode",{parentName:"p"},"toggleTodo")," function."),(0,o.yg)("h2",{id:"srchooksusequeryjs"},"src/hooks/useQuery.js"),(0,o.yg)(s.A,{defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"TabsUsedByRemarkPluginTs2Js"},(0,o.yg)(a.A,{value:"js",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-javascript"},"import { useCallback } from 'react';\n\nimport { useTrackedState, useSetDraft } from '../store';\n\nexport const useQuery = () => {\n  const state = useTrackedState();\n  const getQuery = () => state.query;\n  const setDraft = useSetDraft();\n  const setQuery = useCallback(\n    (query) => {\n      setDraft((draft) => {\n        draft.query = query;\n      });\n    },\n    [setDraft],\n  );\n  return { getQuery, setQuery };\n};\n\n"))),(0,o.yg)(a.A,{value:"ts",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-typescript"},"import { useCallback } from 'react';\n\nimport { useTrackedState, useSetDraft } from '../store';\n\nexport const useQuery = () => {\n  const state = useTrackedState();\n  const getQuery = () => state.query;\n  const setDraft = useSetDraft();\n  const setQuery = useCallback(\n    (query: string) => {\n      setDraft((draft) => {\n        draft.query = query;\n      });\n    },\n    [setDraft],\n  );\n  return { getQuery, setQuery };\n};\n\n")))),(0,o.yg)("p",null,"This is a custom hook to return getQuery and setQuery.\nIt doesn't return ",(0,o.yg)("inlineCode",{parentName:"p"},"state.query")," directly, because\nit will be used conditionally."),(0,o.yg)("h2",{id:"srccomponentstodolistjs"},"src/components/TodoList.js"),(0,o.yg)(s.A,{defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"TabsUsedByRemarkPluginTs2Js"},(0,o.yg)(a.A,{value:"js",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-javascript"},"import React from 'react';\n\nimport { useTodoList } from '../hooks/useTodoList';\nimport { useQuery } from '../hooks/useQuery';\nimport TodoItem from './TodoItem';\nimport NewTodo from './NewTodo';\n\nconst TodoList = () => {\n  const { getQuery, setQuery } = useQuery();\n  const todos = useTodoList();\n  return (\n    <div>\n      <ul>\n        {todos.map(({ id, title, completed }) => (\n          <TodoItem key={id} id={id} title={title} completed={completed} />\n        ))}\n        <NewTodo />\n      </ul>\n      <div>\n        Highlight Query for incomplete items:\n        <input value={getQuery()} onChange={(e) => setQuery(e.target.value)} />\n      </div>\n    </div>\n  );\n};\n\nexport default TodoList;\n\n"))),(0,o.yg)(a.A,{value:"ts",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-typescript"},"import React from 'react';\n\nimport { useTodoList } from '../hooks/useTodoList';\nimport { useQuery } from '../hooks/useQuery';\nimport TodoItem from './TodoItem';\nimport NewTodo from './NewTodo';\n\nconst TodoList = () => {\n  const { getQuery, setQuery } = useQuery();\n  const todos = useTodoList();\n  return (\n    <div>\n      <ul>\n        {todos.map(({ id, title, completed }) => (\n          <TodoItem key={id} id={id} title={title} completed={completed} />\n        ))}\n        <NewTodo />\n      </ul>\n      <div>\n        Highlight Query for incomplete items:\n        <input value={getQuery()} onChange={(e) => setQuery(e.target.value)} />\n      </div>\n    </div>\n  );\n};\n\nexport default TodoList;\n\n")))),(0,o.yg)("p",null,"This component is to show the list of ",(0,o.yg)("inlineCode",{parentName:"p"},"TodoItem"),"s,\n",(0,o.yg)("inlineCode",{parentName:"p"},"NewTodo")," to create a new item, and\nClear button to reset notes in all items."),(0,o.yg)("h2",{id:"srccomponentstodoitemjs"},"src/components/TodoItem.js"),(0,o.yg)(s.A,{defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"TabsUsedByRemarkPluginTs2Js"},(0,o.yg)(a.A,{value:"js",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-javascript"},"import React from 'react';\n\nimport { useQuery } from '../hooks/useQuery';\nimport { useDeleteTodo } from '../hooks/useDeleteTodo';\nimport { useToggleTodo } from '../hooks/useToggleTodo';\nimport { useFlasher } from '../utils';\n\nconst renderHighlight = (title, query) => {\n  if (!query) return title;\n  const index = title.indexOf(query);\n  if (index === -1) return title;\n  return (\n    <>\n      {title.slice(0, index)}\n      <b>{query}</b>\n      {title.slice(index + query.length)}\n    </>\n  );\n};\n\nconst TodoItem = ({ id, title, completed }) => {\n  const { getQuery } = useQuery();\n  const deleteTodo = useDeleteTodo();\n  const toggleTodo = useToggleTodo();\n  return (\n    <li ref={useFlasher()}>\n      <input\n        type=\"checkbox\"\n        checked={!!completed}\n        onChange={() => toggleTodo(id)}\n      />\n      <span\n        style={{\n          textDecoration: completed ? 'line-through' : 'none',\n        }}\n      >\n        {completed ? title : renderHighlight(title, getQuery())}\n      </span>\n      <button onClick={() => deleteTodo(id)}>Delete</button>\n    </li>\n  );\n};\n\nexport default React.memo(TodoItem);\n\n"))),(0,o.yg)(a.A,{value:"ts",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-typescript"},"import React from 'react';\n\nimport { useQuery } from '../hooks/useQuery';\nimport { useDeleteTodo } from '../hooks/useDeleteTodo';\nimport { useToggleTodo } from '../hooks/useToggleTodo';\nimport { useFlasher } from '../utils';\n\nconst renderHighlight = (title, query) => {\n  if (!query) return title;\n  const index = title.indexOf(query);\n  if (index === -1) return title;\n  return (\n    <>\n      {title.slice(0, index)}\n      <b>{query}</b>\n      {title.slice(index + query.length)}\n    </>\n  );\n};\n\ntype Props = {\n  id: number;\n  title: string;\n  completed?: boolean;\n};\n\nconst TodoItem = ({ id, title, completed }: Props) => {\n  const { getQuery } = useQuery();\n  const deleteTodo = useDeleteTodo();\n  const toggleTodo = useToggleTodo();\n  return (\n    <li ref={useFlasher()}>\n      <input\n        type=\"checkbox\"\n        checked={!!completed}\n        onChange={() => toggleTodo(id)}\n      />\n      <span\n        style={{\n          textDecoration: completed ? 'line-through' : 'none',\n        }}\n      >\n        {completed ? title : renderHighlight(title, getQuery())}\n      </span>\n      <button onClick={() => deleteTodo(id)}>Delete</button>\n    </li>\n  );\n};\n\nexport default React.memo(TodoItem);\n\n")))),(0,o.yg)("p",null,"This is the TodoItem component.\nWe used to prefer primitive props for memoized components with v1.\nWith v2, object props are also fine."),(0,o.yg)("h2",{id:"srccomponentsnewtodojs"},"src/components/NewTodo.js"),(0,o.yg)(s.A,{defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"TabsUsedByRemarkPluginTs2Js"},(0,o.yg)(a.A,{value:"js",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-javascript"},"import React, { useState } from 'react';\n\nimport { useAddTodo } from '../hooks/useAddTodo';\nimport { useFlasher } from '../utils';\n\nconst NewTodo = () => {\n  const addTodo = useAddTodo();\n  const [text, setText] = useState('');\n  return (\n    <li ref={useFlasher()}>\n      <input\n        value={text}\n        placeholder=\"Enter title...\"\n        onChange={(e) => setText(e.target.value)}\n      />\n      <button\n        onClick={() => {\n          addTodo(text);\n          setText('');\n        }}\n      >\n        Add\n      </button>\n    </li>\n  );\n};\n\nexport default React.memo(NewTodo);\n\n"))),(0,o.yg)(a.A,{value:"ts",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-typescript"},"import React, { useState } from 'react';\n\nimport { useAddTodo } from '../hooks/useAddTodo';\nimport { useFlasher } from '../utils';\n\nconst NewTodo = () => {\n  const addTodo = useAddTodo();\n  const [text, setText] = useState('');\n  return (\n    <li ref={useFlasher()}>\n      <input\n        value={text}\n        placeholder=\"Enter title...\"\n        onChange={(e) => setText(e.target.value)}\n      />\n      <button\n        onClick={() => {\n          addTodo(text);\n          setText('');\n        }}\n      >\n        Add\n      </button>\n    </li>\n  );\n};\n\nexport default React.memo(NewTodo);\n\n")))),(0,o.yg)("p",null,"This is the NewTodo component to create a new item.\nIt uses a local state for the text field."),(0,o.yg)("h2",{id:"srcutilsjs"},"src/utils.js"),(0,o.yg)(s.A,{defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"TabsUsedByRemarkPluginTs2Js"},(0,o.yg)(a.A,{value:"js",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-javascript"},"import { useRef, useEffect } from 'react';\n\nexport const useFlasher = () => {\n  const ref = useRef(null);\n  useEffect(() => {\n    if (ref.current) {\n      ref.current.setAttribute(\n        'style',\n        'box-shadow: 0 0 2px 1px red; transition: box-shadow 100ms ease-out;',\n      );\n    }\n    const timeOutId = setTimeout(() => {\n      if (ref.current) {\n        ref.current.setAttribute('style', '');\n      }\n    }, 300);\n    return () => {\n      clearTimeout(timeOutId);\n    };\n  }, []);\n  return ref;\n};\n\n"))),(0,o.yg)(a.A,{value:"ts",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-typescript"},"import { useRef, useEffect } from 'react';\n\nexport const useFlasher = () => {\n  const ref = useRef<HTMLLIElement>(null);\n  useEffect(() => {\n    if (ref.current) {\n      ref.current.setAttribute(\n        'style',\n        'box-shadow: 0 0 2px 1px red; transition: box-shadow 100ms ease-out;',\n      );\n    }\n    const timeOutId = setTimeout(() => {\n      if (ref.current) {\n        ref.current.setAttribute('style', '');\n      }\n    }, 300);\n    return () => {\n      clearTimeout(timeOutId);\n    };\n  }, []);\n  return ref;\n};\n\n")))),(0,o.yg)("p",null,"This is a util function to show which components render."),(0,o.yg)("h2",{id:"codesandbox"},"CodeSandbox"),(0,o.yg)("p",null,"You can try ",(0,o.yg)("a",{parentName:"p",href:"https://codesandbox.io/s/infallible-firefly-yzwxc"},"working example"),"."))}y.isMDXComponent=!0}}]);